🔷 Project Background
We currently have a working responsive portfolio web app built with HTML/CSS/Bootstrap.
Existing data structure, IDs, and API bindings are fully functional.
Your task is to redesign only the UI/UX layer in Zeplin for developer handoff.
No changes should be made to the data content, naming conventions, or logic.
🔷 Redesign Objective
Upgrade the design to match Koyfin-level UX and TradingView dark mode UI.
Deliver pixel-perfect mockups for developers in Zeplin.
Focus on modular, professional financial dashboard layout.
🔷 Design Scope
✅ Layout
Sidebar Navigation (Left)
Tabs: Overview, Chart, News, Fundamentals
Top Header Bar
Left: Logo
Center: Symbol Search
Right: User settings/profile icon
Main Content Area
Modular widgets/panels for data display
Chart section placeholder (see below)
✅ Visual Style (TradingView Dark Mode Reference)
Background: #131722
Cards/Panels: #1e222d
Primary Text: #d1d4dc
Secondary Text: #8f929d
Accent Blue: #2962ff
Accent Red (down): #ff5252
Accent Green (up): #00c853
Font: 'Inter', 'Open Sans', 'Roboto' (modern sans-serif)
Rounded corners: 8px
Subtle shadows for depth
Clear hover and active states for buttons, cards, and tabs
✅ Component Mapping
Keep 1:1 mapping with existing data components.
Preserve current data field names and IDs.
Use Zeplin notes to clearly annotate component mappings for developers.
✅ Chart Area
Allocate a large chart placeholder area.
Add Zeplin note:
"Chart placeholder for TradingView or Lightweight Charts integration. UI design only."
✅ Interaction Design (visual only)
Design hover/active/selected states.
Design visual states for tab switching.
No functional logic required at this stage.
🔷 Deliverables
Desktop and mobile mockups
Complete style guide with:
Color palette
Font sizes
Spacing
Component specs
Component/layer naming for frontend handoff
Zeplin notes with clear developer annotations
🔷 Reference Links
Koyfin UX Reference:
https://app.koyfin.com/dashboard
TradingView UI Reference:
https://www.tradingview.com/chart/
Chart Placeholder Reference (for future developer integration):
https://tradingview.github.io/lightweight-charts/
🔷 Visual Wireframe Example (for structure reference)

⚠ Critical Note:
Do not modify or introduce new data fields. This is a purely visual redesign. All backend data bindings will remain as they are.

2025년 6월 12일 (목) 오후 10:47, InJun Baek <pbij50@gmail.com>님이 작성:
Project Brief: Responsive Portfolio Dashboard UI/UX Upgrade (Zeplin Handoff)
📌 Project Background
We have a working responsive portfolio web app (HTML/CSS/Bootstrap), showing portfolio metrics, asset data cards, and a simple chart area.
All data logic and naming conventions are already set and must not be changed in the UI redesign.
Your task is to create a pixel-perfect UI/UX mockup in Zeplin for handoff to frontend developers.
🎯 Redesign Goals (Zeplin)
Reference UX: Koyfin (tab-based, multi-panel, modular)
Reference UI theme: TradingView (dark mode, modern finance dashboard)
🛠️ Zeplin Design Scope
Overall Layout
Main navigation as sidebar (left): Tab entries for Overview, Chart, News, Fundamentals
Top header bar: App logo (left), symbol search (center), user icon/settings (right)
Main content area: Modular, grid- or card-based
Dedicated section for chart (placeholder only: show area where chart will be rendered)
Visual Style
Color theme: TradingView dark palette
Background: #131722
Panels/cards: #1e222d
Text: #d1d4dc
Font: ‘Inter’/‘Open Sans’/modern sans-serif
Rounded cards (border-radius 8px+), subtle shadows
Modern iconography
Responsive for both desktop and mobile views
Component Mapping
Each existing data card or section must be mapped 1:1 to a new visual component.
Keep existing ID/naming for every data field/component (add Zeplin notes to clarify mapping for developers)
Do not add or remove any data content—visual structure only.
Interactions
Provide hover/active/selected states for buttons, tabs, and cards
Tab switching design: only the UI state, not the functional logic
Chart Area
Mark as “Chart placeholder” in design, with Zeplin note:
“Chart area for TradingView or Lightweight Charts integration. Do not implement chart UI, just allocate space.”
Spec Export
All colors, spacing, font sizes, border-radius, etc. must be clear in Zeplin’s styleguide/spec panel
Use descriptive component and layer names for developer handoff
📦 Zeplin Deliverables
Mockups for desktop and mobile views (key screens)
Complete component specs/style guide (color, font, spacing, state)
Mapping notes for all key components and data fields
Marked chart area as placeholder only
Note for Designer:
No changes to data connections, IDs, or names—UI/UX layer only
Be clear with notes and mapping for developers in Zeplin